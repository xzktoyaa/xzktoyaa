-- Цены Предметов
local SportMasterPrice = {
    2350,
    1530,
    1530,
    1550,
    1000,
    1300,
    1550
}

local ZaraPrice = {
    3300,
    1500,
    4000,
    3700,
    99000,
    1450,
    1450,
    2700,
    4600,
    3900,
    3900,
    10000
}

local BapePrice = {
    9500,
    9500,
    10500,
    35500,
    35500,
    40500,
    40500,
    88500,
    30500,
    30500,
    40500,
    53500,
    35500,
    35500,
    35500,
    35500,
    30500,
    43500,
    24500,
    21500
}

local StoneIslandPrice = {
    28400,
    75500,
    80000,
    32000,
    23000,
    30000,
    15000,
    22000,
    22000,
    25000,
    25000,
    25000,
    27000,
    23500
}

local BalenciagaPrice = {
    175000,
    35000,
    20000,
    20000,
    20000,
    20000,
    44000
}

local LouisVuittonPrice = {
    265500,
    940500,
    95500,
    15500,
    620500,
    150500,
    50500,
    265500,
    285500
}

local ChromeHeartsPrice = {
    180500,
    180500,
    160500,
    140500,
    250500,
    250500,
    460500,
    2600500,
    110500,
    150500,
    160500,
    80500
}

local GucciPrice = {
    370000,
    92000,
    128000,
    125000,
    41000,
    143000,
    25000,
    110000,
    150000,
    69000,
    25000,
    80000,
    50000,
    86000,
    86000,
    125000,
    320000
}

local TheNorthFacePrice = {
    53000,
    20000,
    25000,
    999999,
    63000,
    20000,
    34000,
    3000,
    20000,
    50000,
    65000,
    2000,
    17000,
    18000,
    1500,
    21000,
    28000,
    23000,
    22000
}

local MonclerPrice = {
    110000,
    80000,
    225000,
    36500,
    53500,
    53500,
    46500,
    54500,
    57500,
    44500,
    101000,
    160000,
    80000,
    100000,
    24500,
    110000
}

local VetementsPrice = {
    75000,
    36600,
    46000,
    13500,
    52000,
    45000,
    99000,
    73000,
    36000,
    15500,
    70000,
    260000,
    83000,
    82500,
    87000,
    255000,
    25000,
    73000,
    52000,
    140000,
    80000,
    42000,
    31000,
    38000,
    104000,
    23000,
    66000,
    31000
}

local iPhonePrice = {
    88500,
    53500,
    73500,
    55500,
    200500,
    70500
}

local RickOwensPrice = {
    79500,
    86500,
    19200,
    59500,
    99999,
    25500,
    54500,
    41500,
    60500,
    74500,
    38500,
    29500
}

local AdidasPrice = {
    4500,    -- Белый Свитер Black
    25100,   -- Серая Спортивка White
    2450,    -- Серая Футболка Logo
    4150,    -- Черная Футболка Red Logo
    3850,    -- Баскетбольная Футболка
    99000,   -- Зеленое Поло Смешная Аналитика
    4050,    -- Белое Поло
    5950,    -- Черное Худи
    2185,    -- Белая Футболка Pinstripe
    3000,    -- Синяя Футболка Logo
    2660,    -- Тёмно-синяя Кофта
    10735,   -- Белая Футболка Tricolor Germany
    4360,    -- Розовая Кофта White
    9310,    -- Спортивка American
    6840,    -- Бордовая Кофта White
    1050,    -- Черная Футболка Orange
    3150,    -- Черная Футболка с Синими Полосками
    5950,    -- Черная Спортивка Gold
    8950,    -- Красная Спортивка White
    5650,    -- Джерзи Real Madrid
    8870,    -- Лаймовая Кофта White
    3900,    -- Черные Порванные Штаны
    4000,    -- Оранжевые Спортивные Штаны
    4100,    -- Черные Треники
    4100,    -- Черные Штаны Для Бега
    4150,    -- Серые Джинсы
    4350     -- Черные Футбольные Штаны
}

local NikePrice = {
    4000,    -- Тёмно-Синий Свитер
    5000,    -- Тёмно-Синяя Худи
    4000,    -- Чёрно-Синяя Футболка
    4500,    -- Красно-Бежевая Футболка
    3000,    -- Серый Свитер
    100000,  -- Серая Кофта Смешная Аналитика
    2000,    -- Серая Худи
    4000,    -- Чёрная Толстовка
    3000,    -- Чёрная Худи
    2000,    -- Голубой Tech Fleece
    3000,    -- Красный Свитер
    2000,    -- Бежевая Худи
    2000,    -- Красная Худи
    8000,    -- Тёмно-Синяя Куртка
    1000,    -- Серые Штаны
    2000,    -- Чёрные Штаны
    2000,    -- Чёрные Джинсы
    2000,    -- Синие Штаны
    3000,    -- Чёрные Штаны
    2000,    -- Чёрные Джинсы
    2000,    -- Синие Штаны
    1000     -- Серые Штаны
}

local SupremePrice = {
    23500,    -- Красный Свитшот Bevel
    29000,    -- Коричнево-Болотный Свитшот Split
    187000,   -- Красная куртка IBCA
    26500,    -- Жёлтая Футболка Mona Lisa
    41000,    -- Серое Худи BOX LOGO
    26000,    -- Чёрная Карго куртка Supreme x TNF
    56500,    -- Чёрный Свитер Supreme x CDG
    27000,    -- Белая Футболка Kanji
    12000,    -- Бирюзовая Футболка Supreme x Trasher
    99999,    -- Зеленая Худи Смешная Аналитика Rick Owens
    14800,    -- Белая футболка Gradient Arc Logo
    26500,    -- Зелёное Худи Arabic
    33000,    -- Чёрная Футболка Bandana Box logo
    24500,    -- Жёлтая Футболка Swimmers
    24500,    -- Белая Футболка Ganesha
    177000,   -- Белая Футболка Nagoya Opening
    44000,    -- Брюки Supreme × Brox Brothers
    30000,    -- Камуфляжные Красные Штаны
    60000     -- Камуфляжные Штаны Brooklyn
}

local CPCompanyPrice = {
    25500,    -- Ветровка Pro Tec. Lens
    20500,    -- Белая худи Diagonal Raised
    11500,    -- Свитшот Lens Sort
    99500,    -- Свитшот Смешная Аналитика
    20500,    -- Свитшот Logo intarsia
    21500,    -- Голубой Худи Diagonal Fleece
    70500,    -- Худи Pro Tec Arm Lens
    27500,    -- Свитер Logo Pin
    81500,    -- Синий Жилет Chest Lens
    65500,    -- Пуховик D.D Shell
    14500,    -- Белая футболка Logo
    57500,    -- Куртка Eco Chrome
    76500,    -- Куртка Goggle
    46500     -- Свитшот Logo Print
}

-- Списки предметов
local SportMasterList = {
    "Чёрная Спортивная Джинсовка 'Puma'",
    "Белая Футболка 'Puma'",
    "Чёрная Футболка 'Puma'",
    "Чёрные Джоггеры 'Puma'",
    "Красная Футболка 'Demix'",
    "Спортивные Штаны 'Nike'",
    "Чёрные Спортивные Штаны 'Puma'"
}

local ZaraList = {
    "Штаны side cheker 'ZARA'",
    "Черная футболка 'ZARA'",
    "Синий свитер 'ZARA'",
    "Порванные джинсы 'ZARA'",
    "Зеленая зипка Смешная Аналитика",
    "Белая майка 'ZARA'",
    "Жёлтая майка 'ZARA'",
    "Черные порванные джинсы 'ZARA'",
    "Чёрная джинсовка 'ZARA'",
    "Белые рванные джинсы 'ZARA'",
    "Серая Zip-Hoodie 'ZARA'",
    "Синий пиджак 'ZARA'"
}

local BapeList = {
    "Фиолетовый Зип-Худи 'BAPE'",
    "Белая Футболка 'BAPE STA'",
    "Красная Футболка 'BAPE'",
    "Чёрные Джинсы 'BAPE STA'",
    "Тёмные Джинсы 'BAPE STA'",
    "Бежевый Зип-Худи 'BAPE'",
    "Бежевая Зип-Худи 'BAPE'",
    "Рюкзак 'BAPE'",
    "Черная Зип-Худи Baby-Milo",
    "Черный Зип-Худи 'BAPE'",
    "Бежевая Зип-Худи 'BAPE STA'",
    "Серый Зип-Худи 'BAPE'",
    "Чёрные Джинсы 'BAPE STA'",
    "Джинсы 'BAPE'",
    "Тёмные Джинсы 'BAPE STA'",
    "Чёрный Джинсы 'BAPE STA'",
    "Черный Зип-Худи 'BAPE x Baby Milo'",
    "Черный С 'BAPE STA'",
    "Синий Зип-Худи 'BAPE STA'",
    "Серый Зип-Худи 'BAPE STA'"
}

local StoneIslandList = {
    "Фиолетовый Свитер 'Stone Island'",
    "Болотная Куртка 'Stone Island'",
    "Чёрная Куртка 'Stone Island'",
    "Свитшот С Жилетом 'Carhartt X Stone Island'",
    "Болотный Свитшот 'Stone Island'",
    "Чёрная Джинсовка 'Stone Island'",
    "Бежевая Рубашка 'Stone Island'",
    "Красный Свитшот 'Stone Island'",
    "Серый Свитер 'Stone Island'",
    "Черные Джоггеры 'Stone Island'",
    "Синие Джинсы 'Stone Island'",
    "Тёмные Штаны 'Stone Island'",
    "Серые Джинсы 'Stone Island'"
}

local BalenciagaList = {
    "Красная Куртка 'Balenciaga'",
    "Брюки 'Balenciaga'",
    "Чёрный Свитер 'Balenciaga'",
    "Красный Свитер 'Balenciaga'",
    "Зелёный Свитер 'Balenciaga'",
    "Потрёпанные Штаны 'Balenciaga'",
    "Тёмные Джинсы 'Balenciaga'"
}

local LouisVuittonList = {
    "Коричневая Рубашка 'Louis Vuitton'",
    "Чёрная Куртка Пуффер Checks 'Louis Vuitton'",
    "Синий Свитер Intarsia Logo 'Louis Vuitton'",
    "Фиолетовая Худи 'LOUIS VUITTON'",
    "Белая Джинсовка 'Varsity'",
    "Черно белая рубашка 'Monogram'",
    "Футболка 'Cities Half'",
    "Рюкзак 'Louis Vuitton'",
    "Болотный Деловой Костюм 'Louis Vuitton'"
}

local ChromeHeartsList = {
    "Черная Худи Multi Color Cross 'Chrome hearts'",
    "Чёрное Худи 'Chrome hearts'",
    "Худи 'Chrome hearts'",
    "Серые Джинсы 'Chrome Hearts'",
    "Джинсы CROSS PINK 'Chrome Hearts'",
    "Джинсы CROSS GREEN 'Chrome Hearts'",
    "Джинсы CROSS RED 'Chrome Hearts'",
    "Штаны 'Chrome Hearts X CARHARTT'",
    "Чёрный свитшот Chomper 'Matty Boy X Chrome Hearts'",
    "Чёрный свитшот Horse Shoe 'Chrome Hearts'",
    "Коричневая Худи Horse Shoe 'Chrome Hearts'",
    "Красный Лонгслив Chomper 'Matty Boy X Chrome Hearts'"
}

local GucciList = {
    "Фиолетовая Джинсовка Versity 'Off-Whites X Gucci'",
    "Черные Джинсы 'Snake Gucci'",
    "Синяя Кожанная Куртка 'Gucci'",
    "Черное Худи Logo 'Gucci'",
    "Черное худи Future 'Gucci'",
    "Монограммная Джинсовка Ghost 'Gucci'",
    "Монограммная Футболка Ghost 'Gucci'",
    "Куртка Tiger Print 'Gucci'",
    "Синий Спортивный Костюм 'Gucci'",
    "Красная Худи Snake Pring 'Gucci'",
    "Белая Футболка 'Logo Gucci'",
    "Бежевый Свитер Lamb 'Gucci'",
    "Розовая Рубашка Love Letter 'Gucci'",
    "Черные Джинсы Snake 'Gucci'",
    "Серые Штаны 'Gucci'",
    "Черные Брюки 'Gucci'",
    "Джинсовка 'NY GUCCI'"
}

local TheNorthFaceList = {
    "Пуховик Bubble 'The North Face X Supreme'",
    "Пуховик Nuptse Retro 'The North Face'",
    "Пуховик Tropical Camo 'The North Face'",
    "Пуховик 'Смешная Аналитика' 'The North Face'",
    "Куртка Mountain 'The North face'",
    "Зелёный Пуховик Vintage 'The North Face'",
    "Пуховик Printed Dryvent 'The North Face'",
    "Рубашка Поло Beshtor 'The North Face'",
    "Пуховик Nuptse 'The North Face'",
    "Куртка Triple Skull 'The North Face'",
    "КБ Пуховик 'The North Face x Supreme'",
    "Пуховик Red Box 'The North Face'",
    "Пуховик Retro Camo 'The North Face'",
    "Пуховик Summit 'The North Face'",
    "Свитшот Logo 'The North Face'",
    "Пуховик Retro Nuptse 1996 'The North Face'",
    "Пуховик INTERNATIONAL COLLECTION 'The North Face'",
    "Ветровка Varsity 'The North Face x Supreme'",
    "Пуховик Marble Light 'The North Face'"
}

local MonclerList = {
    "Оранжевый Жилет Tibb 'Moncler'",
    "Красный жилет DOWN BORMES 'Moncler'",
    "Пуховик Dronieres 'Moncler'",
    "ШСиний жилет Tib 'Moncler'",
    "Штаны Genius 'Moncler'",
    "Штаны Logo 'Moncler'",
    "Штаны Shiny 'Moncler x Palm Angels'",
    "Штаны 'Moncler x Palm Angels'",
    "Карго штаны Day Namic Convertible 'Moncler'",
    "Штаны Midnight 'Moncler'",
    "Ветровка Slack Jacket 'Moncler'",
    "Пуховик Panelled 'Moncler'",
    "Розовый Жилет Quse 'Moncler'",
    "Пуховик Gary Quilted 'Moncler'",
    "Зип Худи Logo 'Moncler'",
    "Свитер Navy Logo Sweater 'Moncler'"
}

local VetementsList = {
    "Джинсы Gothic Logo 'Vetements'",
    "Белая Футболка Euphoria 'Vetements'",
    "Лонгслив Heartbreaker 'Vetements'",
    "Серое Худи 4 everyone 'Vetements'",
    "Чёрное Худи Vistal Existence 'Vetements'",
    "Черный Лонгслив hi-speed 'Vetements'",
    "Зеленая зипка Смешная Аналитика",
    "Лонгслив i did nothing i just got lucky 'Vetements'",
    "Худи Antwerpen 'Champion x Vetements'",
    "Серая Футболка i dont do drama 'Vetements'",
    "Черное Худи Pirate Bay 'Vetements'",
    "Серое Пальто Wmns 'Vetements'",
    "Серая Футболка Double Layer Maria 'Vetements'",
    "Синяя Куртка Global Mind 'Vetements'",
    "Серое Худи Hug me 'Vetements'",
    "Бордовый бомбер Burgundy racer 'Vetements'",
    "Черный Лонгслив Rated Restricted",
    "Штаны Police Green",
    "Штаны Camouflage 'Vetements'",
    "Красные Штаны Fan Decostucned",
    "Джинсы Gothic logo 'Vetements'",
    "Белая Худи intrerpol 'Vetements'",
    "Черная Футболка the devil loves wear 'Vetements'",
    "Худи Reconstructed 'Vetements'",
    "Синий Лонгслив Made in Europe 'Vetements'",
    "Белая Футболка No social media 'Vetements'",
    "Джинсы 2018 Logo embroidered 'Vetements'",
    "Джинсы made on earth 'Vetements'"
}

local iPhoneList = {
    "Телефон 'iPhone 14 Pro Max'",
    "Телефон 'iPhone 14'",
    "Телефон 'iPhone 13 Pro Max'",
    "Телефон 'iPhone 13'",
    "Телефон 'iPhone 15 Pro Max'",
    "Телефон 'iPhone 15'"
}

local RickOwensList = {
    "Чёрная Футболка Pentagram 'Rick Owens'",
    "Голубая Зип-Худи Jason 'Rick Owens'",
    "Чёрная Футболка Роет 'Rick Owens'",
    "Коричневая Худи Felpa 'Rick Owens'",
    "Зеленая Худи Смешная Аналитика 'Rick Owens'",
    "Чёрная Футболка DRKSHDW 'Rick Owens'",
    "Футболка 'Rick Owens × Stussy'",
    "Тёмно-коричневый Лонгслив 'Rick Owens x Champion'",
    "Чёрное Худи Jason 'Rick Owens'",
    "Джинсовая куртка с кожаными рукавами 'Rick Owens'",
    "Чёрный Свитшот 'Rick Owens × Moncler'",
    "Чёрная Футболка 'Rick Owens'"
}

local AdidasList = {
    "Белый Свитер Black 'Adidas'",
    "Серая Спортивка White 'Adidas'",
    "Серая Футболка Logo 'Adidas'",
    "Черная Футболка Red Logo 'Adidas'",
    "Баскетбольная Футболка 'Adidas'",
    "Зеленое Поло Смешная Аналитика",
    "Белое Поло 'Adidas'",
    "Черное Худи 'Adidas'",
    "Белая Футболка Pinstripe 'Adidas'",
    "Синяя Футболка Logo 'Adidas'",
    "Тёмно-синяя Кофта 'Adidas'",
    "Белая Футболка Tricolor Germany 'Adidas'",
    "Розовая Кофта White 'Adidas'",
    "Спортивка American 'Adidas'",
    "Бордовая Кофта White 'Adidas'",
    "Черная Футболка Orange 'Adidas'",
    "Черная Футболка с Синими Полосками 'Adidas'",
    "Черная Спортивка Gold 'Adidas'",
    "Красная Спортивка White 'Adidas'",
    "Джерзи Real Madrid 'Adidas'",
    "Лаймовая Кофта White 'Adidas'",
    "Черные Порванные Штаны 'Adidas'",
    "Оранжевые Спортивные Штаны 'Adidas'",
    "Черные Треники 'Adidas'",
    "Черные Штаны Для Бега 'Adidas'",
    "Серые Джинсы 'Adidas'",
    "Черные Футбольные Штаны 'Adidas'"
}

local NikeList = {
    "Тёмно-Синий Свитер 'Nike'",
    "Тёмно-Синяя Худи 'Nike'",
    "Чёрно-Синяя Футболка 'Nike'",
    "Красно-Бежевая Футболка 'Nike'",
    "Серый Свитер 'Nike'",
    "Серая Кофта Смешная Аналитика",
    "Серая Худи 'Nike'",
    "Чёрная Толстовка 'Nike'",
    "Чёрная Худи 'Nike'",
    "Голубой 'Nike' Tech Fleece",
    "Красный Свитер 'Nike'",
    "Бежевая Худи 'Nike'",
    "Красная Худи 'Nike'",
    "Тёмно-Синяя Куртка 'Nike'",
    "Серые Штаны 'Nike'",
    "Чёрные Штаны 'Nike'",
    "Чёрные Джинсы 'Nike'",
    "Синие Штаны 'Nike'",
    "Чёрные Штаны 'Nike'",
    "Чёрные Джинсы 'Nike'",
    "Синие Штаны 'Nike'",
    "Серые Штаны 'Nike'"
}

local SupremeList = {
    "Красный Свитшот 'Bevel'",
    "Коричнево-Болотный Свитшот Split 'Supreme'",
    "Красная куртка IBCA 'Supreme'",
    "Жёлтая Футболка Mona Lisa 'Supreme'",
    "Серое Худи BOX LOGO 'Supreme'",
    "Чёрная Карго куртка 'Supreme x TNF'",
    "Чёрный Свитер 'Supreme x CDG'",
    "Белая Футболка Kanji 'Supreme'",
    "Бирюзовая Футболка 'Supreme x Trasher'",
    "Зеленая Худи Смешная Аналитика 'Rick Owens'",
    "Белая футболка Gradient Arc Logo 'Supreme'",
    "Зелёное Худи Arabic 'Supreme'",
    "Чёрная Футболка Bandana Box logo 'Supreme'",
    "Жёлтая Футболка Swimmers 'Supreme'",
    "Белая Футболка Ganesha 'Supreme'",
    "Белая Футболка Nagoya Opening 'Supreme'",
    "Брюки 'Supreme × Brox Brothers'",
    "Камуфляжные Красные Штаны 'Supreme'",
    "Камуфляжные Штаны Brooklyn 'Supreme'"
}

local CPCompanyList = {
    "Ветровка Pro Tec. Lens 'C.P. Company'",
    "Белая худи Diagonal Raised 'C.P. Company'",
    "Свитшот Lens Sort 'C.P. Company'",
    "Свитшот Смешная Аналитика 'C.P. Company'",
    "Свитшот Logo intarsia 'C.P. Company'",
    "Голубой Худи Diagonal Fleece 'C.P. Company'",
    "Худи Pro Tec Arm Lens 'C.P. Company'",
    "Свитер Logo Pin",
    "Синий Жилет Chest Lens 'C.P. Company'",
    "Пуховик D.D Shell 'C.P. Company'",
    "Белая футболка Logo 'C.P. Company'",
    "Куртка Eco Chrome 'C.P. Company'",
    "Куртка Goggle 'C.P. Company'",
    "Свитшот Logo Print 'C.P. Company'"
}

local player_name = game.Players.LocalPlayer.Name

local bot_points_vector = {
	-- Начало
	[1] = Vector3.new(0.03893778473138809, 153.95053100585938, -64.11454772949219),
    [2] = Vector3.new(0.40301382541656494, 181.14999389648438, 53.917747497558594),
    [3] = Vector3.new(0.9679758548736572, 180.96998596191406, 107.267333984375),
    [4] = Vector3.new(0.4388207495212555, 181.46998596191406, 135.822998046875),
   
	-- Store_4
	[5] = Vector3.new(29.40192413330078, 181.6499786376953, 136.15475463867188),
    [6] = Vector3.new(49.7698974609375, 181.6499786376953, 136.24481201171875),
    [7] = Vector3.new(49.7698974609375, 181.6499786376953, 116.24481201171875),
    [8] = Vector3.new(49.7698974609375, 181.6499786376953, 156.24481201171875),
	[9] = Vector3.new(49.7698974609375, 181.6499786376953, 136.24481201171875),
	[10] = Vector3.new(29.40192413330078, 181.6499786376953, 136.15475463867188),

	-- Store_3
	[11] = Vector3.new(29.40192413330078, 181.6499786376953, 181.15475463867188),
	[12] = Vector3.new(49.7698974609375, 181.6499786376953, 181.24478149414062),
	[13] = Vector3.new(49.7698974609375, 181.6499786376953, 161.24478149414062),
	[14] = Vector3.new(49.7698974609375, 181.6499786376953, 201.24478149414062),
	[15] = Vector3.new(49.7698974609375, 181.6499786376953, 181.24478149414062),
	[16] = Vector3.new(29.40192413330078, 181.6499786376953, 181.15475463867188),

	-- Store_2
	[17] = Vector3.new(29.40192413330078, 181.6499786376953, 226.15475463867188),
	[18] = Vector3.new(49.7698974609375, 181.6499786376953, 226.24478149414062),
	[19] = Vector3.new(49.7698974609375, 181.6499786376953, 206.24478149414062),
	[20] = Vector3.new(49.7698974609375, 181.6499786376953, 246.24478149414062),
	[21] = Vector3.new(49.7698974609375, 181.6499786376953, 226.24478149414062),
	[22] = Vector3.new(29.40192413330078, 181.6499786376953, 226.15475463867188),

	-- Store_1
    [23] = Vector3.new(29.40192413330078, 181.6499786376953, 271.15475463867188),
	[24] = Vector3.new(49.7698974609375, 181.6499786376953, 271.24478149414062),
	[25] = Vector3.new(49.7698974609375, 181.6499786376953, 251.24478149414062),
	[26] = Vector3.new(49.7698974609375, 181.6499786376953, 291.24478149414062),
	[27] = Vector3.new(49.7698974609375, 181.6499786376953, 271.24478149414062),
	[28] = Vector3.new(29.40192413330078, 181.6499786376953, 271.15475463867188),

	-- Store_13
	[29] = Vector3.new(-29.40192413330078, 181.6499786376953, 271.15475463867188),
	[30] = Vector3.new(-49.7698974609375, 181.6499786376953, 271.24478149414062),
	[31] = Vector3.new(-49.7698974609375, 181.6499786376953, 251.24478149414062),
	[32] = Vector3.new(-49.7698974609375, 181.6499786376953, 291.24478149414062),
	[33] = Vector3.new(-49.7698974609375, 181.6499786376953, 271.24478149414062),
	[34] = Vector3.new(-29.40192413330078, 181.6499786376953, 271.15475463867188),

	-- Store_14
	[35] = Vector3.new(-29.40192413330078, 181.6499786376953, 226.15475463867188),
	[36] = Vector3.new(-49.7698974609375, 181.6499786376953, 226.24478149414062),
	[37] = Vector3.new(-49.7698974609375, 181.6499786376953, 206.24478149414062),
	[38] = Vector3.new(-49.7698974609375, 181.6499786376953, 246.24478149414062),
	[39] = Vector3.new(-49.7698974609375, 181.6499786376953, 226.24478149414062),
	[40] = Vector3.new(-29.40192413330078, 181.6499786376953, 226.15475463867188),

	-- Store_15
	[41] = Vector3.new(-29.40192413330078, 181.6499786376953, 181.15475463867188),
	[42] = Vector3.new(-49.7698974609375, 181.6499786376953, 181.24478149414062),
	[43] = Vector3.new(-49.7698974609375, 181.6499786376953, 161.24478149414062),
	[44] = Vector3.new(-49.7698974609375, 181.6499786376953, 201.24478149414062),
	[45] = Vector3.new(-49.7698974609375, 181.6499786376953, 181.24478149414062),
	[46] = Vector3.new(-29.40192413330078, 181.6499786376953, 181.15475463867188),

	-- Store_16
	[47] = Vector3.new(-29.40192413330078, 181.6499786376953, 136.15475463867188),
    [48] = Vector3.new(-49.7698974609375, 181.6499786376953, 136.24481201171875),
    [49] = Vector3.new(-49.7698974609375, 181.6499786376953, 116.24481201171875),
    [50] = Vector3.new(-49.7698974609375, 181.6499786376953, 156.24481201171875),
	[51] = Vector3.new(-49.7698974609375, 181.6499786376953, 136.24481201171875),
	[52] = Vector3.new(-29.40192413330078, 181.6499786376953, 136.15475463867188),

	-- Лестница с первого на второй этаж
	[53] = Vector3.new(-29.40192413330078, 181.6499786376953, 181.15475463867188),
	[54] = Vector3.new(-8.896466255187988, 181.6499786376953, 184.064697265625),
	[55] = Vector3.new(-8.896466255187988, 193.40000915527344, 136.15475463867188),

	-- Store_24
	[56] = Vector3.new(-29.40192413330078, 193.6499786376953, 136.15475463867188),
	[57] = Vector3.new(-49.7698974609375, 193.6499786376953, 136.24481201171875),
    [58] = Vector3.new(-49.7698974609375, 193.6499786376953, 116.24481201171875),
    [59] = Vector3.new(-49.7698974609375, 193.6499786376953, 156.24481201171875),
	[60] = Vector3.new(-49.7698974609375, 193.6499786376953, 136.24481201171875),
	[61] = Vector3.new(-29.40192413330078, 193.6499786376953, 136.15475463867188),
	
	-- Store_19
	[62] = Vector3.new(-29.40192413330078, 193.6499786376953, 181.15475463867188),
	[63] = Vector3.new(-49.7698974609375, 193.6499786376953, 181.24478149414062),
	[64] = Vector3.new(-49.7698974609375, 193.6499786376953, 161.24478149414062),
	[65] = Vector3.new(-49.7698974609375, 193.6499786376953, 201.24478149414062),
	[66] = Vector3.new(-49.7698974609375, 193.6499786376953, 181.24478149414062),
	[67] = Vector3.new(-29.40192413330078, 193.6499786376953, 181.15475463867188),

	-- Store_18
	[68] = Vector3.new(-29.40192413330078, 193.6499786376953, 226.15475463867188),
	[69] = Vector3.new(-49.7698974609375, 193.6499786376953, 226.24478149414062),
	[70] = Vector3.new(-49.7698974609375, 193.6499786376953, 206.24478149414062),
	[71] = Vector3.new(-49.7698974609375, 193.6499786376953, 246.24478149414062),
	[72] = Vector3.new(-49.7698974609375, 193.6499786376953, 226.24478149414062),
	[73] = Vector3.new(-29.40192413330078, 193.6499786376953, 226.15475463867188),

	-- Store_17
	[74] = Vector3.new(-29.40192413330078, 193.6499786376953, 271.15475463867188),
	[75] = Vector3.new(-49.7698974609375, 193.6499786376953, 271.24478149414062),
	[76] = Vector3.new(-49.7698974609375, 193.6499786376953, 251.24478149414062),
	[77] = Vector3.new(-49.7698974609375, 193.6499786376953, 291.24478149414062),
	[78] = Vector3.new(-49.7698974609375, 193.6499786376953, 271.24478149414062),
	[79] = Vector3.new(-29.40192413330078, 193.6499786376953, 271.15475463867188),
	
	-- Store_5
	[80] = Vector3.new(29.40192413330078, 193.6499786376953, 271.15475463867188),
	[81] = Vector3.new(49.7698974609375, 193.6499786376953, 271.24478149414062),
	[82] = Vector3.new(49.7698974609375, 193.6499786376953, 251.24478149414062),
	[83] = Vector3.new(49.7698974609375, 193.6499786376953, 291.24478149414062),
	[84] = Vector3.new(49.7698974609375, 193.6499786376953, 271.24478149414062),
	[85] = Vector3.new(29.40192413330078, 193.6499786376953, 271.15475463867188),

	-- Store_6
	[86] = Vector3.new(29.40192413330078, 193.6499786376953, 226.15475463867188),
	[87] = Vector3.new(49.7698974609375, 193.6499786376953, 226.24478149414062),
	[88] = Vector3.new(49.7698974609375, 193.6499786376953, 206.24478149414062),
	[89] = Vector3.new(49.7698974609375, 193.6499786376953, 246.24478149414062),
	[90] = Vector3.new(49.7698974609375, 193.6499786376953, 226.24478149414062),
	[91] = Vector3.new(29.40192413330078, 193.6499786376953, 226.15475463867188),

	-- Store_12
	[92] = Vector3.new(29.40192413330078, 193.6499786376953, 181.15475463867188),
	[93] = Vector3.new(49.7698974609375, 193.6499786376953, 181.24478149414062),
	[94] = Vector3.new(49.7698974609375, 193.6499786376953, 161.24478149414062),
	[95] = Vector3.new(49.7698974609375, 193.6499786376953, 201.24478149414062),
	[96] = Vector3.new(49.7698974609375, 193.6499786376953, 181.24478149414062),
	[97] = Vector3.new(29.40192413330078, 193.6499786376953, 181.15475463867188),
	
	-- Store_7
	[98] = Vector3.new(29.40192413330078, 193.6499786376953, 136.15475463867188),
	[99] = Vector3.new(49.7698974609375, 193.6499786376953, 136.24481201171875),
    [100] = Vector3.new(49.7698974609375, 193.6499786376953, 116.24481201171875),
    [101] = Vector3.new(49.7698974609375, 193.6499786376953, 156.24481201171875),
	[102] = Vector3.new(49.7698974609375, 193.6499786376953, 136.24481201171875),
	[103] = Vector3.new(29.40192413330078, 193.6499786376953, 136.15475463867188),

	-- Лестница со второго на третий этаж
	[104] = Vector3.new(1.40192413330078, 193.6499786376953, 136.15475463867188),
	[105] = Vector3.new(1.40192413330078, 205.14999389648438, 181.15475463867188),
	[106] = Vector3.new(29.40192413330078, 205.14999389648438, 181.15475463867188),
	[107] = Vector3.new(29.40192413330078, 205.14999389648438, 136.15475463867188),

	-- Store_11
	[108] = Vector3.new(29.40192413330078, 205.14999389648438, 136.15475463867188),
    [109] = Vector3.new(49.7698974609375, 205.14999389648438, 136.24481201171875),
    [110] = Vector3.new(49.7698974609375, 205.14999389648438, 116.24481201171875),
    [111] = Vector3.new(49.7698974609375, 205.14999389648438, 156.24481201171875),
	[112] = Vector3.new(49.7698974609375, 205.14999389648438, 136.24481201171875),
	[113] = Vector3.new(29.40192413330078, 205.14999389648438, 136.15475463867188),

	-- Store_10
	[114] = Vector3.new(29.40192413330078, 205.14999389648438, 181.15475463867188),
	[115] = Vector3.new(49.7698974609375, 205.14999389648438, 181.24478149414062),
	[116] = Vector3.new(49.7698974609375, 205.14999389648438, 161.24478149414062),
	[117] = Vector3.new(49.7698974609375, 205.14999389648438, 201.24478149414062),
	[118] = Vector3.new(49.7698974609375, 205.14999389648438, 181.24478149414062),
	[119] = Vector3.new(29.40192413330078, 205.14999389648438, 181.15475463867188),

	-- Store_9
	[120] = Vector3.new(29.40192413330078, 205.14999389648438, 226.15475463867188),
	[121] = Vector3.new(49.7698974609375, 205.14999389648438, 226.24478149414062),
	[122] = Vector3.new(49.7698974609375, 205.14999389648438, 206.24478149414062),
	[123] = Vector3.new(49.7698974609375, 205.14999389648438, 246.24478149414062),
	[124] = Vector3.new(49.7698974609375, 205.14999389648438, 226.24478149414062),
	[125] = Vector3.new(29.40192413330078, 205.14999389648438, 226.15475463867188),

	-- Store_8
    [126] = Vector3.new(29.40192413330078, 205.14999389648438, 271.15475463867188),
	[127] = Vector3.new(49.7698974609375, 205.14999389648438, 271.24478149414062),
	[128] = Vector3.new(49.7698974609375, 205.14999389648438, 251.24478149414062),
	[129] = Vector3.new(49.7698974609375, 205.14999389648438, 291.24478149414062),
	[130] = Vector3.new(49.7698974609375, 205.14999389648438, 271.24478149414062),
	[131] = Vector3.new(29.40192413330078, 205.14999389648438, 271.15475463867188),

	-- Store_20
	[132] = Vector3.new(-29.40192413330078, 205.14999389648438, 271.15475463867188),
	[133] = Vector3.new(-49.7698974609375, 205.14999389648438, 271.24478149414062),
	[134] = Vector3.new(-49.7698974609375, 205.14999389648438, 251.24478149414062),
	[135] = Vector3.new(-49.7698974609375, 205.14999389648438, 291.24478149414062),
	[136] = Vector3.new(-49.7698974609375, 205.14999389648438, 271.24478149414062),
	[137] = Vector3.new(-29.40192413330078, 205.14999389648438, 271.15475463867188),

	-- Store_22
	[138] = Vector3.new(-29.40192413330078, 205.14999389648438, 226.15475463867188),
	[139] = Vector3.new(-49.7698974609375, 205.14999389648438, 226.24478149414062),
	[140] = Vector3.new(-49.7698974609375, 205.14999389648438, 206.24478149414062),
	[141] = Vector3.new(-49.7698974609375, 205.14999389648438, 246.24478149414062),
	[142] = Vector3.new(-49.7698974609375, 205.14999389648438, 226.24478149414062),
	[143] = Vector3.new(-29.40192413330078, 205.14999389648438, 226.15475463867188),

	-- Store_23
	[144] = Vector3.new(-29.40192413330078, 205.14999389648438, 181.15475463867188),
	[145] = Vector3.new(-49.7698974609375, 205.14999389648438, 181.24478149414062),
	[146] = Vector3.new(-49.7698974609375, 205.14999389648438, 161.24478149414062),
	[147] = Vector3.new(-49.7698974609375, 205.14999389648438, 201.24478149414062),
	[148] = Vector3.new(-49.7698974609375, 205.14999389648438, 181.24478149414062),
	[149] = Vector3.new(-29.40192413330078, 205.14999389648438, 181.15475463867188),

	-- Store_21
	[150] = Vector3.new(-29.40192413330078, 205.14999389648438, 136.15475463867188),
    [151] = Vector3.new(-49.7698974609375, 205.14999389648438, 136.24481201171875),
    [152] = Vector3.new(-49.7698974609375, 205.14999389648438, 116.24481201171875),
    [153] = Vector3.new(-49.7698974609375, 205.14999389648438, 156.24481201171875),
	[154] = Vector3.new(-49.7698974609375, 205.14999389648438, 136.24481201171875),
	[155] = Vector3.new(-29.40192413330078, 205.14999389648438, 136.15475463867188)
}

local store_order = {
	[1] = "Store_4",
	[2] = "Store_3",
	[3] = "Store_2",
	[4] = "Store_1",
	[5] = "Store_13",
	[6] = "Store_14",
	[7] = "Store_15",
	[8] = "Store_16",
	[9] = "Store_24",
	[10] = "Store_19",
	[11] = "Store_18",
	[12] = "Store_17",
	[13] = "Store_5",
	[14] = "Store_6",
	[15] = "Store_7",
	[16] = "Store_12",
	[17] = "Store_11",
	[18] = "Store_10",
	[19] = "Store_9",
	[20] = "Store_8",
	[21] = "Store_20",
	[22] = "Store_22",
	[23] = "Store_23",
	[24] = "Store_21"
}

-- Библиотеки
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Окно
local Window = Rayfield:CreateWindow({
    Name = "script by miha1234456",
    LoadingTitle = "Загрузка скрипта...",
    LoadingSubtitle = "by miha1234456"
})

-- Вкладки
local MainTab = Window:CreateTab("Функции")
local VisualsTab = Window:CreateTab("Магазины")
local BotTab = Window:CreateTab("Бот")

-- Добавляем вкладку Change Log
local ChangeLogTab = Window:CreateTab("Change Log")

-- Добавляем секцию для текстового поля
local ChangeLogSection = ChangeLogTab:CreateSection("Что нового?")

local ChangeLogInput = ChangeLogTab:CreateParagraph({
    Title = "Change Log",
    Content = [[
        21.10.2024 Апдейт:
        Добавлены новые магазины: Adidas, Nike, C.P. Company, Supreme, Zara, Louis Vuitton.
        В скором времени возможно исправлю покупку, макс дистанцию и подбор.
    ]],
    Size = UDim2.new(1, 0, 1, 0)  -- Увеличиваем размер поля
})

-- Вкладка магазионв
_G.RefreshRate = 0.5
local ShopSettingsSection = VisualsTab:CreateSection("Настройки")
local VisualsParagraph = VisualsTab:CreateParagraph({Title = "Насчет времени обновления!", Content = "\nЧем меньше время обновления, тем больше нагрузка на комьютер! Если у вас слабый ПК - ставьте время больше.\n\nДля слабых ПК рекомендуется ставить минимум 0.5 секунд "})
local RefreshRateSlider = VisualsTab:CreateSlider({
    Name = "Время обновления",
    Range = {0.35, 1},
    Increment = 0.05,
    CurrentValue = 0.5,
    Callback = function(Value)
        _G.RefreshRate = Value
    end,
})

local ColorSection = VisualsTab:CreateSection("Цвета")

local OutlineColorPicker = VisualsTab:CreateColorPicker({
    Name = "Обводка",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        for i, v in pairs(workspace.World.Debris:FindFirstChild("Stores"):GetDescendants()) do
            if v:FindFirstChild("Highlight") then
                local Highlight = v:FindFirstChild("Highlight")
                Highlight.OutlineColor = Value
            end
        end
    end
})

local FillColorPicker = VisualsTab:CreateColorPicker({
    Name = "Заливка",
    Color = Color3.fromRGB(255,0,0),
    Callback = function(Value)
        for i, v in pairs(workspace.World.Debris:FindFirstChild("Stores"):GetDescendants()) do
            if v:FindFirstChild("Highlight") then
                local Highlight = v:FindFirstChild("Highlight")
                Highlight.FillColor = Value
            end
        end
    end
})

local TransparencySlider = VisualsTab:CreateSlider({
    Name = "Прозрачность",
    Range = {0, 0.6},
    Increment = 0.05,
    CurrentValue = 0.4,
    Callback = function(Value)
        for i, v in pairs(workspace.World.Debris:FindFirstChild("Stores"):GetDescendants()) do
            if v:FindFirstChild("Highlight") then
                local Highlight = v:FindFirstChild("Highlight")
                Highlight.FillTransparency = Value
            end
        end
    end,
 })

local ShopSection = VisualsTab:CreateSection("Магазины")

_G.SportMaster = false
local SportmasterToggle = VisualsTab:CreateToggle({
    Name = "Спортмастер",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.SportMaster = true
            while _G.SportMaster == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(SportMasterList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(SportMasterList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < SportMasterPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.SportMaster = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(SportMasterList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(SportMasterList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < SportMasterPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Zara = false
local ZaraToggle = VisualsTab:CreateToggle({
    Name = "Zara",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Zara = true
            while _G.Zara == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(ZaraList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(ZaraList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < ZaraPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Zara = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(ZaraList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(ZaraList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < ZaraPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Bape = false
local BapeToggle = VisualsTab:CreateToggle({
    Name = "Bape",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Bape = true
            while _G.Bape == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(BapeList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(BapeList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < BapePrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Bape = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(BapeList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(BapeList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < BapePrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.StoneIsland = false
local StoneIslandToggle = VisualsTab:CreateToggle({
    Name = "Stone Island",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.StoneIsland = true
            while _G.StoneIsland == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(StoneIslandList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(StoneIslandList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < StoneIslandPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.StoneIsland = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(StoneIslandList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(StoneIslandList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < StoneIslandPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Balenciaga = false
local BalenciagaToggle = VisualsTab:CreateToggle({
    Name = "Balenciaga",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Balenciaga = true
            while _G.Balenciaga == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(BalenciagaList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(BalenciagaList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < BalenciagaPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Balenciaga = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(BalenciagaList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(BalenciagaList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < BalenciagaPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.ChromeHearts = false
local ChromeHeartsToggle = VisualsTab:CreateToggle({
    Name = "Chrome Hearts",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.ChromeHearts = true
            while _G.ChromeHearts == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(ChromeHeartsList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(ChromeHeartsList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < ChromeHeartsPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.ChromeHearts = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(ChromeHeartsList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(ChromeHeartsList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < ChromeHeartsPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.LouisVuitton = false
local LouisVuittonToggle = VisualsTab:CreateToggle({
    Name = "Louis Vuitton",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.LouisVuitton = true
            while _G.LouisVuitton == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(LouisVuittonList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(LouisVuittonList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < LouisVuittonPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.LouisVuitton = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(LouisVuittonList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(LouisVuittonList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < LouisVuittonPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Gucci = false
local GucciToggle = VisualsTab:CreateToggle({
    Name = "Gucci",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Gucci = true
            while _G.Gucci == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(GucciList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(GucciList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < GucciPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Gucci = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(GucciList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(GucciList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < GucciPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.TheNorthFace = false
local TheNorthFaceToggle = VisualsTab:CreateToggle({
    Name = "TheNorthFace",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.TheNorthFace = true
            while _G.TheNorthFace == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(TheNorthFaceList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(TheNorthFaceList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < TheNorthFacePrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.TheNorthFace = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(TheNorthFaceList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(TheNorthFaceList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < TheNorthFacePrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Vetements = false
local VetementsToggle = VisualsTab:CreateToggle({
    Name = "Vetements",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Vetements = true
            while _G.Vetements == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(VetementsList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(VetementsList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < VetementsPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Vetements = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(VetementsList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(VetementsList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < VetementsPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.iPhone = false
local iPhoneToggle = VisualsTab:CreateToggle({
    Name = "iPhone",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.iPhone = true
            while _G.iPhone == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(iPhoneList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(iPhoneList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < iPhonePrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.iPhone = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(iPhoneList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(iPhoneList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < iPhonePrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Moncler = false
local MonclerToggle = VisualsTab:CreateToggle({
    Name = "Moncler",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Moncler = true
            while _G.Moncler == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(MonclerList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(MonclerList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < MonclerPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.Moncler = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(MonclerList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(MonclerList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < MonclerPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.RickOwens = false
local RickOwensToggle = VisualsTab:CreateToggle({
    Name = "RickOwens",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.RickOwens = true
            while _G.RickOwens == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(RickOwensList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(RickOwensList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < RickOwensPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end

                        if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end 
                end

                task.wait(_G.RefreshRate)
            end
        else
            _G.RickOwens = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(RickOwensList, v.ProximityPrompt.ObjectText) then
                        local Name = v.ProximityPrompt.ObjectText
                        local Index = table.find(RickOwensList, Name)
                        local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                        if tonumber(Price) < RickOwensPrice[Index] then
                            if v:FindFirstChild("Highlight") then
                                v:FindFirstChild("Highlight"):Remove()
                            end
                        end
                    end

                    if v.ProximityPrompt.ActionText == "Повесить" and v:FindFirstChild("Highlight") then
                        v:FindFirstChild("Highlight"):Remove()
                    end
                end 
            end
        end
    end
})

_G.Adidas = false
local AdidasToggle = VisualsTab:CreateToggle({
    Name = "Adidas",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Adidas = true
            while _G.Adidas == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(AdidasList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(AdidasList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < AdidasPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end
                    end
                end
                task.wait(_G.RefreshRate)
            end
        else
            _G.Adidas = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(AdidasList, v.ProximityPrompt.ObjectText) then
                        if v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end
                end
            end
        end
    end
})

_G.Nike = false
local NikeToggle = VisualsTab:CreateToggle({
    Name = "Nike",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Nike = true
            while _G.Nike == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(NikeList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(NikeList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < NikePrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end
                    end
                end
                task.wait(_G.RefreshRate)
            end
        else
            _G.Nike = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(NikeList, v.ProximityPrompt.ObjectText) then
                        if v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end
                end
            end
        end
    end
})

_G.Supreme = false
local SupremeToggle = VisualsTab:CreateToggle({
    Name = "Supreme",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Supreme = true
            while _G.Supreme == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(SupremeList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(SupremeList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < SupremePrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end
                    end
                end
                task.wait(_G.RefreshRate)
            end
        else
            _G.Supreme = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(SupremeList, v.ProximityPrompt.ObjectText) then
                        if v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end
                end
            end
        end
    end
})

_G.CPCompany = false
local CPCompanyToggle = VisualsTab:CreateToggle({
    Name = "C.P. Company",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.CPCompany = true
            while _G.CPCompany == true do
                for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                    if v:FindFirstChildOfClass("ProximityPrompt") then
                        if table.find(CPCompanyList, v.ProximityPrompt.ObjectText) then
                            local Name = v.ProximityPrompt.ObjectText
                            local Index = table.find(CPCompanyList, Name)
                            local Price = string.gsub(v.ProximityPrompt.ActionText, "(%D)", "")
                            if tonumber(Price) < CPCompanyPrice[Index] then
                                if not v:FindFirstChild("Highlight") then
                                    local Highlight = Instance.new("Highlight")
                                    Highlight.Parent = v
                                    Highlight.OutlineColor = OutlineColorPicker.Color
                                    Highlight.FillColor = FillColorPicker.Color
                                    Highlight.FillTransparency = TransparencySlider.CurrentValue
                                end
                            end
                        end
                    end
                end
                task.wait(_G.RefreshRate)
            end
        else
            _G.CPCompany = false
            for i, v in pairs(game:GetService("Workspace").World.Debris.Stores:GetDescendants()) do
                if v:FindFirstChildOfClass("ProximityPrompt") then
                    if table.find(CPCompanyList, v.ProximityPrompt.ObjectText) then
                        if v:FindFirstChild("Highlight") then
                            v:FindFirstChild("Highlight"):Remove()
                        end
                    end
                end
            end
        end
    end
})
-- Вкладка функций
local MainSection = MainTab:CreateSection("Автоматические")

_G.Grab = false
local GrabToggle = MainTab:CreateToggle({
    Name = "Подбор",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Grab = true
            while _G.Grab == true do
                for i,v in pairs(workspace.World.Debris:FindFirstChild("Stores"):GetDescendants()) do
                    if v:FindFirstChildOfClass("Highlight") and v:FindFirstChildOfClass("Highlight").FillTransparency ~= 1 then         
                        fireproximityprompt(v.ProximityPrompt, math.huge)
                    end
                end

                task.wait(0.35)
            end
        else
            _G.Grab = false
        end
    end
})

_G.Buy = false
local BuyToggle = MainTab:CreateToggle({
    Name = "Покупка",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Buy = true
            while _G.Buy == true do
                for i,v in pairs(workspace.World.Debris:FindFirstChild("Stores"):GetChildren()) do
                    if v:FindFirstChild("BoundingBox") then
                        if v.BoundingBox:FindFirstChild("PurchasePrompt") then
                            if v.BoundingBox.PurchasePrompt:FindFirstChild("ProximityPrompt") then
                                if game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool") then
                                    game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
                                end

                                fireproximityprompt(v:FindFirstChild("BoundingBox"):FindFirstChild("PurchasePrompt"):FindFirstChild("ProximityPrompt"), math.huge)
                            end
                        end
                    end
                end

                task.wait(0.25)
            end
        else
            _G.Buy = false
        end
    end
})

_G.Sell = false
local SellToggle = MainTab:CreateToggle({
    Name = "Продажа",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Sell = true
            while _G.Sell == true do
                for i, v in next, game:GetService("ReplicatedStorage"):WaitForChild("GameNetwork"):WaitForChild("ServerNetwork"):WaitForChild("GetPlayerData"):InvokeServer() do
                    if i == "Inventory" then
                        for j, k in next, v do
                            if type(k) == "table" then
                                for n, m in next, k do
                                    if n == "ItemHash" and _G.Sell == true then
                                        local args = {
                                            [1] = m
                                        }

                                        game:GetService("ReplicatedStorage"):WaitForChild("GameNetwork"):WaitForChild("ServerNetwork"):WaitForChild("SellClothing"):InvokeServer(unpack(args))
                                        task.wait(0.25)
                                    end
                                end
                            end
                        end
                    end
                end

                task.wait(1)
            end
        else
            _G.Sell = false
        end
    end
})

_G.Distance = false
local DistanceToggle = MainTab:CreateToggle({
    Name = "Максимальная дистанция",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.Distance = true
            while _G.Distance == true do
                for i,v in pairs(workspace.World.Debris:GetChildren()) do
                    if v:IsA("Model") and v.Name ~= "Seller" then
                        if v:FindFirstChildOfClass("MeshPart") then
                            if v:FindFirstChildOfClass("MeshPart").Name ~= "Primary" then
                                v:FindFirstChildOfClass("MeshPart").ProximityPrompt.MaxActivationDistance = 10
                            end
                        end
                    end
                end

                task.wait(0.5)
            end
        else
            _G.Distance = false
        end
    end
})

local PlayerSection = MainTab:CreateSection("Персонаж")

local WalkSlider = MainTab:CreateSlider({
    Name = "Скорость",
    Range = {16, 38},
    Increment = 1,
    CurrentValue = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
 })


 _G.Noclip = false
local NoclipToggle = MainTab:CreateToggle({
    Name = "NoClip",
    CurrentValue = false,
    Callback = function(Value)
        local Character = game.Players.LocalPlayer.Character

        if Value then
            _G.Noclip = true
            while _G.Noclip == true do
                for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
                        v.CanCollide = false
                    end
                end

                task.wait(1)
            end
        else
            _G.Noclip = false
            for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA('BasePart') and v.Name ~= floatName then
                    v.CanCollide = true
                end
            end
        end
    end
})

-- Вкладка бота
function GetGameStatus()
	local GameStatus = game.Players.LocalPlayer.PlayerGui.PlayerScreen.Screen.LeftTab.GameStatus.Text
	if GameStatus:gsub("%p", ""):gsub("%d", ""):gsub("%s", ""):sub(1, 2) == "С" then
		return true
	else
		return false
	end
end

function GetPlayerBackpackAmount()
    local amount = 0
    for i, v in pairs(game:GetService("ReplicatedStorage"):WaitForChild("GameNetwork"):WaitForChild("ServerNetwork"):WaitForChild("GetPlayerData"):InvokeServer()) do
        if i == "Inventory" then
            for j, k in next, v do
                if type(k) == "table" then
                    for n, m in next, k do
                        if n == "ItemHash" then
                            amount = amount + 1
                        end
                    end
                end
            end
        end
    end

    return amount
end

local Paragraph = BotTab:CreateParagraph({Title = "Обновление скрипта!", Content = "\nБыл добавлен бот, который может фармить валюту без вашего участия. Бот использует только те магазины и функции, которые вы выбрали в соответствующих вкладках.\n\nЗапускать бота только рядом с Барыгой!"})

local BotSettingSection = BotTab:CreateSection("Настройки")

_G.PauseRate = 1
 local TeleportSlider = BotTab:CreateSlider({
   Name = "Время паузы",
   Range = {0.5, 3},
   Increment = 0.05,
   CurrentValue = 1,
   Callback = function(Value)
        _G.PauseRate = Value
   end,
})

local MainBotSection = BotTab:CreateSection("Основное")

_G.IsLegitMode = true
local BotMode = BotTab:CreateDropdown({
    Name = "Режим",
    Options = {"Ходьба", "Телепорт"},
    CurrentOption = {"Ходьба"},
    MultipleOptions = false,
    Callback = function(Option)
        if Option == "Ходьба" then
            _G.IsLegitMode = true
        else
            _G.IsLegitMode = false
        end
    end,
})

_G.EnableBot = false
local EnableBotToggle = BotTab:CreateToggle({
    Name = "Включить",
    CurrentValue = false,
    Callback = function(Value)
        Players = game:GetService("Players")

        -- anti kick
        if not hookmetamethod then 
            print('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
        end
        local LocalPlayer = Players.LocalPlayer
        local oldhmmi
        local oldhmmnc
        oldhmmi = hookmetamethod(game, "__index", function(self, method)
            if self == LocalPlayer and method:lower() == "kick" then
                return error("Expected ':' not '.' calling member function Kick", 2)
            end
            return oldhmmi(self, method)
        end)
        oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
            if self == LocalPlayer and getnamecallmethod():lower() == "kick" then
                return
            end
            return oldhmmnc(self, ...)
        end)

        -- anti teleport
        if not hookmetamethod then 
            print('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
        end
        local TeleportService = TeleportService
        local oldhmmi
        local oldhmmnc
        oldhmmi = hookmetamethod(game, "__index", function(self, method)
            if self == TeleportService then
                if method:lower() == "teleport" then
                    return error("Expected ':' not '.' calling member function Kick", 2)
                elseif method == "TeleportToPlaceInstance" then
                    return error("Expected ':' not '.' calling member function TeleportToPlaceInstance", 2)
                end
            end
            return oldhmmi(self, method)
        end)
        oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
            if self == TeleportService and getnamecallmethod():lower() == "teleport" or getnamecallmethod() == "TeleportToPlaceInstance" then
                return
            end
            return oldhmmnc(self, ...)
        end)

        -- anit afk
        Players.LocalPlayer.Idled:Connect(function()
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)

        if Value then
            _G.EnableBot = true
			local point_index = 1
            while _G.EnableBot == true do
                for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                    if v.Name == player_name and point_index < table.getn(bot_points_vector) and GetGameStatus() == true and GetPlayerBackpackAmount() < 50 then
                        local backpack_amount = GetPlayerBackpackAmount()

						if _G.IsLegitMode == true and _G.EnableBot == true and backpack_amount < 50 then
							if v.Humanoid.MoveDirection == Vector3.zero then
								v.Humanoid:MoveTo(bot_points_vector[point_index])
								v.Humanoid.MoveToFinished:Wait()
								point_index = point_index + 1
							end

                            task.wait(_G.PauseRate)
						elseif _G.IsLegitMode == false and _G.EnableBot == true and backpack_amount < 50 then
							v.Humanoid.PlatformStand = true
							local body_gyro = Instance.new("BodyGyro", v.HumanoidRootPart)
							body_gyro.P = 9e4
							body_gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)

							local body_velocity = Instance.new("BodyVelocity", v.HumanoidRootPart)
							body_velocity.velocity = Vector3.new(0, 0, 0)
							body_velocity.maxForce = Vector3.new(9e9, 9e9, 9e9)

							v.HumanoidRootPart.CFrame = CFrame.new(0.03893778473138809, 153.95053100585938, -64.11454772949219)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 160.95053100585938, -44.11454772949219)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, -24.11454772949219)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, 0.11454772949219)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, 20.11454772949219)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.40301382541656494, 181.14999389648438, 53.917747497558594)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.9679758548736572, 180.96998596191406, 107.267333984375)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							v.HumanoidRootPart.CFrame = CFrame.new(0.4388207495212555, 181.46998596191406, 135.822998046875)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(2)

							for i, k in store_order do  
								for _, n in pairs(game:GetService("Workspace").World.Debris.Stores:GetChildren()) do
									if n.Name == k then
                                        local game_status = GetGameStatus()
                                        local backpack_amount = GetPlayerBackpackAmount()

                                        if _G.EnableBot == true and game_status == true and backpack_amount < 50 then
                                            local cash_register_coordinates = n.Building.CashRegister.WorldPivot.Position
                                            v.HumanoidRootPart.CFrame = CFrame.new(n.WorldPivot.Position)
                                            body_gyro.CFrame = v.HumanoidRootPart.CFrame
                                            task.wait(_G.PauseRate)

                                            for _, m in pairs(n:GetChildren()) do
                                                if m.Name == "PlacementContainer" then
                                                    local game_status = GetGameStatus()
                                                    local backpack_amount = GetPlayerBackpackAmount()

                                                    for _, l in pairs(m:GetChildren()) do
                                                        if l.Name == "Container" then
                                                            if _G.EnableBot == true and game_status == true and backpack_amount < 50 then
                                                                v.HumanoidRootPart.CFrame = CFrame.new(l.WorldPivot.Position)
                                                                body_gyro.CFrame = v.HumanoidRootPart.CFrame
                                                                task.wait(_G.PauseRate)
                                                            end
                                                        end
                                                    end
                                                end
                                            end

                                            v.HumanoidRootPart.CFrame = CFrame.new(cash_register_coordinates)
										    body_gyro.CFrame = v.HumanoidRootPart.CFrame
										    task.wait(_G.PauseRate + 1)
										elseif _G.EnableBot == false or game_status == false or backpack_amount == 50 then
                                            point_index = 200
                                            break
                                        end
                                    end
								end
							end
                            
							v.Humanoid.RootPart.CFrame = CFrame.new(0.4388207495212555, 181.46998596191406, 135.822998046875)
							body_gyro.CFrame = v.HumanoidRootPart.CFrame
							task.wait(_G.PauseRate)
						end
                    elseif (v.Name == player_name and _G.EnableBot == true) and (point_index >= table.getn(bot_points_vector) or GetGameStatus() == false or GetPlayerBackpackAmount() == 50) then
                        if _G.IsLegitMode == true then
                            v.HumanoidRootPart.CFrame = CFrame.new(0.4388207495212555, 181.46998596191406, 135.822998046875)
							task.wait(2)

                            v.Humanoid:MoveTo(bot_points_vector[4])
                            v.Humanoid.MoveToFinished:Wait()

                            v.Humanoid:MoveTo(bot_points_vector[3])
                            v.Humanoid.MoveToFinished:Wait()

                            v.Humanoid:MoveTo(bot_points_vector[2])
                            v.Humanoid.MoveToFinished:Wait()

                            v.Humanoid:MoveTo(bot_points_vector[1])
                            v.Humanoid.MoveToFinished:Wait()
                        elseif _G.IsLegitMode == false then
                            point_index = 200

                            v.HumanoidRootPart.CFrame = CFrame.new(0.4388207495212555, 181.46998596191406, 135.822998046875)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.9679758548736572, 180.96998596191406, 107.267333984375)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.40301382541656494, 181.14999389648438, 53.917747497558594)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, 20.11454772949219)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, 0.11454772949219)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 170.95053100585938, -24.11454772949219)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.40893778473138809, 160.95053100585938, -44.11454772949219)
                            task.wait(2)

                            v.HumanoidRootPart.CFrame = CFrame.new(0.03893778473138809, 153.95053100585938, -64.11454772949219)
                            task.wait(2)
                        end

                        repeat
                            task.wait(5)
                        until GetGameStatus() == true and GetPlayerBackpackAmount() == 0

                        point_index = 1
					end
                end

                task.wait(2)
            end
        else
            _G.EnableBot = false
			local point_index = 1

			for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v.Name == player_name then
					for _, j in pairs(v:GetDescendants()) do
						if j.Name == "BodyGyro" or j.Name == "BodyVelocity" then
							j:Remove()
						end
					end

					v.Humanoid.PlatformStand = false
				end
			end
        end
    end,
 })
